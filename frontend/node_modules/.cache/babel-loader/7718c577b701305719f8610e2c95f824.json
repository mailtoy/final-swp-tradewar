{"ast":null,"code":"var _jsxFileName = \"/Users/mailtoy/Documents/prefinal/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from // Line,\n// LineChart,\n'recharts';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      const _this$state = this.state,\n            endpoint = _this$state.endpoint,\n            message = _this$state.message;\n      const temp = message;\n      const socket = socketIOClient(endpoint);\n      socket.on('new-message', messageNew => {\n        temp.push(messageNew);\n        this.setState({\n          message: temp\n        });\n      });\n    };\n\n    this.state = {\n      message: [],\n      endpoint: \"http://localhost:4000\" // เชื่อมต่อไปยัง url ของ realtime server\n\n    };\n  }\n\n  render() {\n    const message = this.state.message;\n    const data = [];\n    message.forEach(m => {\n      if (m && m.toLowerCase().includes('#')) {\n        const hashtags = m.split('#');\n        if (!hashtags[1].includes('BNK48')) return;\n        const name = hashtags[1].split('BNK48')[0];\n        if (!name) return;\n        const findData = data.find(d => d.name === name);\n\n        if (findData) {\n          findData.count++;\n        } else {\n          data.push({\n            name,\n            count: 1\n          });\n        }\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      width: 730,\n      height: 250,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"count\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        height: '500px',\n        overflow: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, message.map((data, i) => React.createElement(\"div\", {\n      key: i,\n      style: {\n        marginTop: 20,\n        paddingLeft: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, i + 1, \" : \", data))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mailtoy/Documents/prefinal/frontend/src/App.js"],"names":["React","Component","socketIOClient","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Bar","App","constructor","componentDidMount","state","endpoint","message","temp","socket","on","messageNew","push","setState","render","data","forEach","m","toLowerCase","includes","hashtags","split","name","findData","find","d","count","height","overflow","map","i","marginTop","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport socketIOClient from 'socket.io-client'\nimport {\n  BarChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar,\n  // Line,\n  // LineChart,\n} from 'recharts'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      message: [],\n      endpoint: \"http://localhost:4000\" // เชื่อมต่อไปยัง url ของ realtime server\n    }\n  }\n\n  componentDidMount = () => {\n    const { endpoint, message } = this.state\n    const temp = message\n    const socket = socketIOClient(endpoint)\n    socket.on('new-message', (messageNew) => {\n      temp.push(messageNew)\n      this.setState({ message: temp })\n    })\n  }\n\n  render() {\n    const { message } = this.state\n    const data = []\n    message.forEach(m => {\n      if (m && m.toLowerCase().includes('#')) {\n        const hashtags = m.split('#')\n        if (!hashtags[1].includes('BNK48'))\n          return\n        const name = hashtags[1].split('BNK48')[0]\n        if (!name)\n          return\n        const findData = data.find(d => d.name === name)\n        if (findData) {\n          findData.count++\n        } else {\n          data.push({ name, count: 1 })\n        }\n      }\n    })\n\n    return (\n      <div>\n        <div>\n          <BarChart width={730} height={250} data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"count\" fill=\"#8884d8\" />\n          </BarChart>\n          {/* <LineChart width={400} height={400} data={data}>\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n          </LineChart> */}\n        </div>\n        <div style={{ height: '500px', overflow: 'scroll' }}>\n          {\n            message.map((data, i) =>\n              <div key={i} style={{ marginTop: 20, paddingLeft: 50 }} >\n                {i + 1} : {data}\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}